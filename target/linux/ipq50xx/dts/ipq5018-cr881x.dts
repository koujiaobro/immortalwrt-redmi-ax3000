// SPDX-License-Identifier: (GPL-2.0+)

/dts-v1/;

#include "ipq5018.dtsi"

/ {
	model = "Xiaomi CR881x";
	compatible = "xiaomi,cr881x", "qcom,ipq5018";

	#address-cells = <2>;
	#size-cells = <2>;
	interrupt-parent = <&intc>;

	aliases {
		serial0 = &blsp1_uart1;

		ethernet0 = &mac0;
		ethernet1 = &mac1;

		led-boot = &led_system_blue;
		led-failsafe = &led_system_red;
		led-running = &led_system_blue;
		led-upgrade = &led_system_red;
	};

	chosen {
		// Override the root parameter from u-boot
		// Increase coherent_pool size for WiFi
		bootargs-append = " root=/dev/ubiblock0_1 coherent_pool=2M";
		stdout-path = "serial0:115200n8";
	};

	reserved-memory {
		q6_mem_regions: q6_mem_regions@4b000000 {
			no-map;
#ifndef CONFIG_ATH11K_MEM_PROFILE_256M
			reg = <0x0 0x4b000000 0x0 0x3b00000>;
#else
			reg = <0x0 0x4b000000 0x0 0x3000000>;
#endif
		};
	};

	thermal-zones {
		status = "ok";
	};
};

&tmc_etr {
	/delete-property/ memory-region;
};

&tlmm {
	blsp_uart0_pins: blsp_uart0_pins {
		pins =
			"gpio20", // RX
			"gpio21"; // TX
		function = "blsp0_uart0";
		drive-strength = <8>;
		bias-disable;
	};

	qspi_nand_pins: qspi_nand_pins {
		clock {
			pins = "gpio9";
			function = "qspi_clk";
			drive-strength = <8>;
			bias-disable;
		};

		cs {
			pins = "gpio8";
			function = "qspi_cs";
			drive-strength = <8>;
			bias-disable;
		};

		data {
			pins = "gpio7", "gpio6", "gpio5", "gpio4";
			function = "qspi_data";
			drive-strength = <8>;
			bias-disable;
		};
	};

	mdio1_pins: mdio1_pins {
		mdc {
			pins = "gpio36";
			function = "mdc";
			drive-strength = <8>;
			bias-pull-up;
		};

		mdio {
			pins = "gpio37";
			function = "mdio";
			drive-strength = <8>;
			bias-pull-up;
		};
	};

	leds_pins: leds_pins {
		led_system_blue {
			pins = "gpio24";
			function = "gpio";
			drive-strength = <8>;
			bias-pull-down;
		};

		led_system_red {
			pins = "gpio25";
			function = "gpio";
			drive-strength = <8>;
			bias-pull-down;
		};

		led_internet_blue {
			pins = "gpio26";
			function = "gpio";
			drive-strength = <8>;
			bias-pull-down;
		};

		led_internet_red {
			pins = "gpio27";
			function = "gpio";
			drive-strength = <8>;
			bias-pull-down;
		};
	};

	button_pins: button_pins {
		button_reset {
			pins = "gpio38";
			function = "gpio";
			drive-strength = <8>;
			bias-pull-up;
		};

		button_mesh {
			pins = "gpio28";
			function = "gpio";
			drive-strength = <8>;
			bias-pull-up;
		};
	};
};

&blsp1_uart1 {
	pinctrl-0 = <&blsp_uart0_pins>;
	pinctrl-names = "default";
	status = "ok";
};

&qpic_bam {
	status = "ok";
};

&nand {
	pinctrl-0 = <&qspi_nand_pins>;
	pinctrl-names = "default";
	status = "ok";
};

&tsens {
	status = "ok";
};

&soc {
	leds {
		compatible = "gpio-leds";
		pinctrl-0 = <&leds_pins>;
		pinctrl-names = "default";

		led_system_blue: led_system_blue {
			label = "blue:system";
			gpio = <&tlmm 24 GPIO_ACTIVE_HIGH>;
			default-state = "on";
		};

		led_system_red: led_system_red {
			label = "red:system";
			gpio = <&tlmm 25 GPIO_ACTIVE_HIGH>;
		};

		led_internet_blue: led_internet_blue {
			label = "blue:internet";
			gpio = <&tlmm 26 GPIO_ACTIVE_HIGH>;
		};

		led_internet_red: led_internet_red {
			label = "red:internet";
			gpio = <&tlmm 27 GPIO_ACTIVE_HIGH>;
		};
	};

	button {
		compatible = "gpio-keys";
		pinctrl-0 = <&button_pins>;
		pinctrl-names = "default";

		button_reset {
			label = "reset";
			gpios = <&tlmm 38 GPIO_ACTIVE_LOW>;
			linux,input-type = <EV_KEY>;
			linux,code = <KEY_RESTART>;
			debounce-interval = <60>;
		};

		button_mesh {
			label = "mesh";
			gpios = <&tlmm 28 GPIO_ACTIVE_LOW>;
			linux,input-type = <EV_KEY>;
			linux,code = <KEY_WPS_BUTTON>;
			debounce-interval = <60>;
		};
	};

	ess-instance {
		num_devices = <1>;

		// Dummy switch, to describe how the external ports connects to the MAC
		// For example, some chips have PSGMII ports which combine 5 MAC into
		// 1 external port.
		// For IPQ50xx, this is used to choose SGMII or SGMII-plus
		ess-switch@0x39c00000 {
			compatible = "qcom,ess-switch-ipq50xx";
			device_id = <0>;

			cmnblk_clk = "internal_96MHz";

			// MAC1 Mode
			switch_mac_mode = <0xc>; // PORT_WRAPPER_SGMII_PLUS
			// switch_mac_mode = <0xf>; // PORT_WRAPPER_SGMII_CHANNEL0

			qcom,port_phyinfo {
				// MAC0 -> GE Phy -> YT9215 Phy4
				port@0 {
					port_id = <1>;

					mdiobus = <&mdio0>;
					phy_address = <7>;

					phy_dac = <0x10 0x10>;
				};

				// MAC1 ---SGMII---> YT9215 SerDes
				port@1 {
					port_id = <2>;

					forced-speed = <2500>;
					forced-duplex = <1>;
				};
			};
		};
	};

	// MAC0 -> GE Phy
	mac0: dp1 {
		compatible = "qcom,nss-dp";
		device_type = "network";
		qcom,id = <1>;

		reg = <0x39C00000 0x10000>;
		interrupts = <GIC_SPI 101 IRQ_TYPE_LEVEL_HIGH>;
		clocks = <&gcc GCC_SNOC_GMAC0_AXI_CLK>;
		clock-names = "nss-snoc-gmac-axi-clk";

		qcom,mactype = <2>; // GMAC_HAL_TYPE_SYN_GMAC
		local-mac-address = [000000000000];
		mdio-bus = <&mdio0>;
		qcom,phy-mdio-addr = <7>;
		phy-mode = "internal";
		qcom,link-poll = <1>;
	};

	// MAC1 ---SGMII---> YT9215 SerDes
	mac1: dp2 {
		compatible = "qcom,nss-dp";
		device_type = "network";
		qcom,id = <2>;

		reg = <0x39D00000 0x10000>;
		interrupts = <GIC_SPI 109 IRQ_TYPE_LEVEL_HIGH>;
		clocks = <&gcc GCC_SNOC_GMAC1_AXI_CLK>;
		clock-names = "nss-snoc-gmac-axi-clk";

		qcom,mactype = <2>; // GMAC_HAL_TYPE_SYN_GMAC
		local-mac-address = [000000000000];
		phy-mode = "2500base-x";
	};
};

&mdio0 {
	status = "ok";

	// IPQ5018 GE Phy -> YT9215 Phy4
	ethernet-phy@0 {
		reg = <7>;
	};
};

&mdio1 {
	pinctrl-0 = <&mdio1_pins>;
	pinctrl-names = "default";
	status = "ok";

	// Motorcomm YT9215
	yt9215: switch@1d {
		compatible = "motorcomm,yt9215-smi";
		reg = <29>;
		switchid = <0>;

		reset-gpios = <&tlmm 39 GPIO_ACTIVE_LOW>;
		reset-assert-us = <10000>; /* 10ms */
		reset-deassert-us = <50000>; /* 50ms */

		ports {
			// MAC0 -> Phy0 -> LAN1
			port@0 {
				reg = <0>;
			};

			// MAC1 -> Phy1 -> LAN2
			port@1 {
				reg = <1>;
			};

			// MAC2 -> Phy2 -> LAN3
			port@2 {
				reg = <2>;
			};

			// MAC3 -> Phy3 -> WAN
			port@3 {
				reg = <3>;
			};

			// MAC4 -> Phy4 -> IPQ5018 GE Phy
			port@4 {
				reg = <4>;
			};

			// MAC8 ---SGMII+---> IPQ5018 MAC1
			port@8 {
				reg = <8>;
				phy-mode = "2500base-x";

				fixed-link {
					speed = <2500>;
					full-duplex;
				};
			};
		};
	};
};

&q6v5_wcss {
	compatible = "qcom,ipq5018-q6-mpd";
	#address-cells = <1>;
	#size-cells = <1>;
	ranges;

	resets =
		<&gcc GCC_WCSSAON_RESET>,
		<&gcc GCC_WCSS_Q6_BCR>;
	reset-names =
		"wcss_aon_reset",
		"wcss_q6_reset";

	clocks =
		<&gcc GCC_Q6_AXIS_CLK>,
		<&gcc GCC_WCSS_ECAHB_CLK>,
		<&gcc GCC_Q6_AXIM_CLK>,
		<&gcc GCC_Q6_AXIM2_CLK>,
		<&gcc GCC_Q6_AHB_CLK>,
		<&gcc GCC_Q6_AHB_S_CLK>,
		<&gcc GCC_WCSS_AXI_S_CLK>;
	clock-names =
		"gcc_q6_axis_clk",
		"gcc_wcss_ecahb_clk",
		"gcc_q6_axim_clk",
		"gcc_q6_axim2_clk",
		"gcc_q6_ahb_clk",
		"gcc_q6_ahb_s_clk",
		"gcc_wcss_axi_s_clk";

	reg =
		<0x0cd00000 0x4040>,
		<0x1938000 0x8>,
		<0x193d204 0x4>;
	reg-names =
		"qdsp6",
		"tcsr-msip",
		"tcsr-q6";

	memory-region = <&q6_mem_regions>;

	qcom,rproc = <&q6v5_wcss>;
	firmware = "IPQ5018/q6_fw.mdt";

	qcom,bootargs_smem = <507>;
	boot-args = </*       type: */ 0x2 /* PCIE1 */
		     /*     length: */ 4
		     /*      PD id: */ 2
		     /* reset GPIO: */ 18
		     /*   reserved: */ 0 0>;

	status = "ok";

	// IPQ5018
	q6_wcss_pd1: remoteproc_pd1@4ab000 {
		compatible = "qcom,ipq5018-wcss-ahb-mpd";

		resets =
			<&gcc GCC_WCSSAON_RESET>,
			<&gcc GCC_WCSS_BCR>,
			<&gcc GCC_CE_BCR>;
		reset-names =
			"wcss_aon_reset",
			"wcss_reset",
			"ce_reset";

		clocks =
			<&gcc GCC_WCSS_AHB_S_CLK>,
			<&gcc GCC_WCSS_ACMT_CLK>,
			<&gcc GCC_WCSS_AXI_M_CLK>;
		clock-names =
			"gcc_wcss_ahb_s_clk",
					"gcc_wcss_acmt_clk",
					"gcc_wcss_axi_m_clk";

		reg = <0x4ab000 0x20>;
		reg-names = "rmb";

		qcom,halt-regs = <&tcsr_q6_block 0xa000 0xd000 0x0>;

		interrupts-extended =
			<&wcss_smp2p_in 8 0>,
			<&wcss_smp2p_in 9 0>,
			<&wcss_smp2p_in 12 0>,
			<&wcss_smp2p_in 11 0>;
		interrupt-names =
			"fatal",
			"ready",
			"spawn-ack",
			"stop-ack";

		qcom,smem-states =
			<&wcss_smp2p_out 8>,
			<&wcss_smp2p_out 9>,
			<&wcss_smp2p_out 10>;
		qcom,smem-state-names =
			"shutdown",
			"stop",
			"spawn";

		firmware = "IPQ5018/q6_fw.mdt";
		m3_firmware = "IPQ5018/m3_fw.mdt";
	};

	// QCN6102
	q6_wcss_pd2: remoteproc_pd2 {
		compatible = "qcom,ipq5018-wcss-pcie-mpd";

		interrupts-extended =
			<&wcss_smp2p_in 16 0>,
			<&wcss_smp2p_in 17 0>,
			<&wcss_smp2p_in 20 0>,
			<&wcss_smp2p_in 19 0>;
		interrupt-names =
			"fatal",
			"ready",
			"spawn-ack",
			"stop-ack";

		qcom,smem-states =
			<&wcss_smp2p_out 16>,
			<&wcss_smp2p_out 17>,
			<&wcss_smp2p_out 18>;
		qcom,smem-state-names =
			"shutdown",
			"stop",
			"spawn";

		firmware = "IPQ5018/q6_fw.mdt";
		m3_firmware = "qcn6122/m3_fw.mdt";
	};
};

&wifi0 {
	// IPQ5018
	qcom,multipd_arch;
	qcom,rproc = <&q6_wcss_pd1>;
	qcom,userpd-subsys-name = "q6v5_wcss_userpd1";

	qcom,board_id = <0x23>;

	qcom,bdf-addr = <0x4c400000 0x4c400000 0x4c400000>;
	qcom,caldb-addr = <0x4d200000 0x4d200000 0>;
#ifndef CONFIG_ATH11K_MEM_PROFILE_256M
	m3-dump-addr = <0x4d400000>;
#else
	m3-dump-addr = <0>;
#endif

	status = "ok";
};

&wifi1 {
	// QCN6102
	qcom,multipd_arch;
	qcom,rproc = <&q6_wcss_pd2>;
	qcom,userpd-subsys-name = "q6v5_wcss_userpd2";

	qcom,board_id = <0x60>;

	qcom,bdf-addr = <0x4d500000 0x4d500000 0x4d100000>;
	qcom,caldb-addr = <0x4e500000 0x4e500000 0>;
#ifndef CONFIG_ATH11K_MEM_PROFILE_256M
	m3-dump-addr = <0x4ea00000>;
#else
	m3-dump-addr = <0x4df00000>;
#endif

	status = "ok";
};
